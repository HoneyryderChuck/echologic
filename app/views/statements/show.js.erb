<% if defined? @info %>
  info('<%=@info%>');
<% end %>
<% if defined? @error %>
  info('<%=@error%>');
<% end %>


/* history handling */
<% if !params[:sids].blank? and @ancestors %>
  var stack = "<%= params[:sids] %>".split(",");
	<% @ancestors.each_with_index do |ancestor, index| %>
   <% type = ancestor.class.name.underscore %>
    var ancestor = stack[<%= index %>];
		var ancestor_element = $('#statements .statement').eq(<%= index %>);
		/* if not rendered, than render */
    if(ancestor_element.length == 0 || !ancestor_element.attr('id').match(ancestor)) {
		  $("<%= escape_javascript(render_ancestor(ancestor)) %>").statement('insert', <%= index%>);
    } else {
      ancestor_element.statement('hide');
    }
  <% end %>
<% end %>


/* breadcrumb */
<% if !@breadcrumbs.blank? %>
  <% @breadcrumbs.each do |b| %>
	 $('#breadcrumbs').breadcrumb("add",eval(<%= b.to_json %>));
  <% end %>
<% end %>
$('#breadcrumbs').breadcrumb('update').breadcrumb('resize');


<% if !params[:expand].blank? %>
  var content = "<%= escape_javascript(render :partial => 'statements/content', :locals => {:hide_content => true}) %>";
  $('#statements .statement').eq(<%= @statement_node.level %>).statement('insertContent', content).statement('show');
<% elsif !params[:new_level].blank? %>
  var element = $("<%= escape_javascript(render :partial => 'statements/show', :locals => {:hide_content => true}) %>");
	element.statement('insert', <%= @statement_node.level %>).statement('show').statement('removeBelow');
<% else %>
  var element = $("<%= escape_javascript(render :partial => 'statements/show') %>");
	element.statement('insert',<%= @statement_node.level %>).statement('removeBelow');
<% end %>

