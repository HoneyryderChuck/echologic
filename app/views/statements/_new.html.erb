<% statement_node ||= @statement_node %>
<% statement_document ||= @statement_document %>

<% semantic_form_for statement_node,
          :html => {:class => "ajax_form new wide_form statement
                               #{node_type(statement_node)}
						                   #{'alternative' if @node_environment.hub?}
						                   #{@statement_node_type.taggable? ? 'taggable' : ''}
						                   #{@statement_node_type.echoable? ? 'echoable' : ''}
                               #{@statement_node_type.has_embeddable_data? ? 'embeddable no_type' : ''}",
                               'dom-parent' => statement_node.parent_node ?
                               "#{dom_class(statement_node.parent_node)}_#{statement_node.parent_node.target_id}" :
                               @node_environment.origin.to_s } do |form| -%>

	<%= hidden_field_tag :origin, @previous_node ? "#{@previous_type}#{@previous_node.id}" : (@node_environment.origin.to_s||"") %>
  <%= hidden_field_tag :bids, (!@bids.blank? ? @bids.join(",") : @node_environment.bids.to_s) %>
	<%= hidden_field_tag :sids, params[:sids] if params[:sids] %>
	<%= hidden_field_tag :al, @node_environment.alternative_modes.to_s %>
  <%= hidden_field_tag :hub, @node_environment.hub.to_s if @node_environment.hub? %>
  <%= hidden_field_tag "statement_node[init_alternative]", 1 if @node_environment.hub? %>


	<%= render :partial => 'statements/form/form_header', :locals => {:form => form, :statement_node => statement_node} %>
  <%= render :partial => 'statements/form/form_content',
                         :locals => {:form => form, :statement_node => statement_node,
                                     :headline => I18n.t("discuss.statements.new.#{node_type(statement_node)}") }%>

<% end -%>
