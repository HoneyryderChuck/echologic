<% if defined? @info %>
  info('<%=@info%>') 
<% end %>

/* if we came directly from one of the new statement links in search or my discussions, then html response */
if(!window.url.match(/\/\d+/)) {
  window.location.replace("<%= send("statement_node#{params[:path] ? '_with_path' : ''}#{params[:value] ? '_and_value' : ''}_url",@statement_node, params[:path], params[:value]) %>");
}

/* load new statement to session */
<% if @statement_node.parent %>
  var session_id = '<%= dom_class(@statement_node.parent) %>';
<% else %>
  var session_id = 'roots';
<% end %>
  var session_data =  $('div#statements').data(session_id);
	if (session_data != null) {
		session_data.unshift(<%= @statement_node.id %>);
		$('div#statements').data(session_id, session_data);
	} else {
	  session_data = [<%= @statement_node.id %>, "add/<%= dom_class(@statement_node) %>"]
	}
	

var class_element = $('#statements .statement:eq(<%= @statement_node.level %>)');

/* Remove all elements from the same class or children class */
removeChildrenStatements(class_element);

var statement = "<%= escape_javascript(render :partial => 'statements/show') %>";
replaceOrInsert(class_element, statement);
	
var stack = $('div#statements .statement').map(function(){
  return this.id.replace(/[^0-9]+/, "");
}).get();

$.setFragment({ "sid": stack.join(','), "new_level" : ''});