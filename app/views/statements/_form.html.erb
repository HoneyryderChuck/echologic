<% statement_node ||= @statement_node %>
<% tags ||= @tags %>
<% statement_document ||= @statement_document %>
<% semantic_form_for statement_node.self_with_parents, :html => {:class => 'wide_form' } do |form| -%>

  <!-- Basic fields: title + text -->
  <%= render :partial => "statements/document_form",
             :locals => { :form => form,
                          :statement_node => statement_node,
                          :statement_document => statement_document } %>

  <% if statement_node.kind_of?(Question) -%>

    <!-- Statement tags (currently only for questions) -->
    <% form.inputs do %>
		  <%= render :partial => "statements/statement_tags",
                 :locals => {:form => form,
                             :statement_node => statement_node,
                             :tags => tags}%>
		<% end %>

    <!-- Published state combo
         FIXME: i don't know how to do this manually with formtastics. enums are not really supported by rails,
         and everywhere else where we use enum like statefulness in models, views do it like this -->
	  <% if current_user.has_role?(:editor)%>
	    <% form.inputs do %>
	      <li id="question_state_input" class="select optional error">
	        <%= form.label :state_id %>
	        <% i = -1 -%>
	        <%= form.select(:state_id,
                          StatementNode.statement_states.map { |state| [state.get_current_enum_value.value,state.id] },
	                        :selected => (form.object.state ?
                                        form.object.state.id :
                                        StatementNode.statement_states.first.id)) %>
	      </li>
	    <% end %>
	  <% else %>
		  <%= form.hidden_field :state_id, :value => StatementNode.statement_states('new').id %>
		<% end %>

  <% else -%>
    <!-- All statement types but questions -->
	  <%= form.hidden_field :state_id, :value => StatementNode.statement_states('published').id %>
	<% end -%>

  <!-- Hidden fields -->
	<%= form.hidden_field :statement_id %>
  <%= form.hidden_field :parent_id %>
	<%= form.hidden_field :root_id %>
	<%= hidden_field_tag "#{statement_node_class_dom_id(@statement_node).downcase}[statement_document][author_id]",
                       current_user.id %>
  <%= hidden_field_tag "#{statement_node_class_dom_id(@statement_node).downcase}[statement_document][language_id]",
                       statement_document.language_id || @locale_language_id %>

  <!-- Submit or cancel -->
  <% form.buttons do %>
    <%= form.commit_button I18n.t('application.general.save'), :button_html => { :alt => 'save_button' } %>
    <span class="or_cancel"><%= I18n.t('application.general.or') %></span>
		<%= cancel_new_statement_node(statement_node) %>
  <% end %>
<% end -%>
