<% statement_node ||= @statement_node %>
<% statement_node.state_id ||= StatementNode.statement_states('new').id %>
<% tags ||= @tags %>
<% statement_document ||= @statement_document %>
<% semantic_form_for statement_node.self_with_parents, :html => {:class => 'wide_form' } do |form| -%>

  <!-- Basic fields: title + text -->
  <%= render :partial => "statements/document_form",
             :locals => { :form => form,
                          :statement_node => statement_node,
                          :statement_document => statement_document } %>

  <% if statement_node.kind_of?(Question) -%>

    <!-- Statement tags (currently only for questions) -->
    <% form.inputs do %>
		  <%= render :partial => "statements/statement_tags",
                 :locals => {:form => form,
                             :statement_node => statement_node,
                             :tags => tags}%>
		<% end %>

    <!-- Published state radio buttons -->
    <% if statement_node.new_record? -%>
      <% form.inputs do %>
        <%= form.input :state_id,
                       :as => :radio,
                       :label => I18n.t('discuss.statements.states.label'),
                       :collection => [[I18n.t('discuss.statements.states.deferred_publish'),
                                         StatementNode.statement_states('new').id],
                                       [I18n.t('discuss.statements.states.immediate_publish'),
                                         StatementNode.statement_states('published').id]] %>
      <% end %>
    <% end %>

  <% else -%>
    <!-- All statement types but questions -->
	  <%= form.hidden_field :state_id, :value => StatementNode.statement_states('published').id %>
	<% end -%>

  <!-- Hidden fields -->
	<%= form.hidden_field :statement_id %>
  <%= form.hidden_field :parent_id %>
	<%= hidden_field_tag "#{statement_node_class_dom_id(@statement_node).downcase}[statement_document][author_id]",
                       current_user.id %>
  <%= hidden_field_tag "#{statement_node_class_dom_id(@statement_node).downcase}[statement_document][language_id]",
                       statement_document.language_id || @locale_language_id %>

  <!-- Submit or cancel -->
  <% form.buttons do %>
    <%= form.commit_button I18n.t('application.general.save'), :button_html => { :alt => 'save_button' } %>
    <span class="or_cancel"><%= I18n.t('application.general.or') %></span>
		<%= cancel_new_statement_node(statement_node) %>
  <% end %>
<% end -%>
