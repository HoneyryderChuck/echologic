<% type_plural = @type.to_s.underscore.pluralize %>
var statement = $('#statements > #<%=dom_id(@statement_node)%>');
var container =  statement.find('.<%=type_plural%>');
var children_list = container.find('.children_list');
var more_element = container.find('.more_pagination');

<%if @page.to_i == 1 %>
  panel_height = <%= @children[@type].total_entries <= 7 ? ((@children[@type].total_entries + 1) * 29) : 203 %>
	resetChildrenList(children_list, {height: panel_height});
<% end %>

var elements_list = "<%= escape_javascript(render :partial => 'statements/child',
                                                  :locals => {:child_type => @type.to_s.underscore},
                                                  :collection => @children[@type][@offset, @per_page]) %>";
var pagination_buttons = "<%= escape_javascript(will_paginate(@children[@type], :class => 'more_pagination',
                                                   :next_label => I18n.t("application.general.more"),
                                                   :renderer => StatementsHelper::MoreRenderer)) %>";

var scrollpane;
<% if @page.to_i > 1 %>
  scrollpane = container.find('.children_list').data('jsp');
  children_list = scrollpane.getContentPane();
<% end %>

children_list.append(elements_list);
<% if @children[@type].next_page.nil? %>
  children_list.append('<%= add_create_new_statement_button(@statement_node, @child_type || @type.to_s.underscore, :label_type => @type.to_s.underscore, :new_level => true, :bids => params[:bids], :origin => params[:origin], :css => "ajax" ) %>');
<% end %>

more_element.replaceWith(pagination_buttons);

<% if @page.to_i > 1 %>
  scrollpane.reinitialise();
  scrollpane.scrollToBottom();
<% end %>
container.find('.more_pagination a').addClass('ajax');

if (container.hasClass('.children')) {
  statement.data('api').reinitialiseChildren(".<%=type_plural%>");
} else {
  statement.data('api').reinitialiseSiblings(".<%=type_plural%>");
}
