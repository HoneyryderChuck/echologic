<% if defined? @info %>
  info('<%=@info%>') 
<% end %>
<% if defined? @error %>
  info('<%=@error%>') 
<% end %>

/* history handling */
<% if !params[:sid].blank? and @ancestors %>
  var stack = "<%= params[:sid] %>".split(",");
  <% @ancestors.each_with_index do |ancestor, index| %>
   <% type = ancestor.class.name.underscore %>
    var ancestor = stack[<%= index %>];
    var ancestor_element = $('#statements .statement').eq(<%= index %>);
    /* if not rendered, than render */
    if(ancestor_element.length == 0 || !ancestor_element.attr('id').match(ancestor)) {
      $("<%= escape_javascript(render_ancestor(ancestor)) %>").statement('insert', <%= index%>);
    } else {
      ancestor_element.statement('collapse');
    }
  <% end %>
<% end %>

/* breadcrumb */
<% if @breadcrumbs %>
  <% @breadcrumbs.each do |b| %>
    loadBreadcrumb("<%= b[0]%>" , "<%= b[1] %>", "<%= b[2] %>");
  <% end %>
	reinitialiseBreadcrumb();
<% end %>

var add_teaser = $("<%= escape_javascript(render :partial => 'statements/add') %>");
add_teaser.statement('insert', <%= (@statement_node.nil? or @type.classify.constantize.is_top_statement?) ? 0 : @statement_node.level + 1 %>).statement('removeBelow');
