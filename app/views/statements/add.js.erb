<% if defined? @info %>
  info('<%=@info%>') 
<% end %>
<% if defined? @error %>
  info('<%=@error%>') 
<% end %>

/* history handling */
<% if !params[:sid].blank? %>
  var stack = "<%= params[:sid] %>".split(",");
  <% @ancestors.each_with_index do |ancestor, index| %>
   <% type = ancestor.class.name.underscore %>
    var ancestor = stack[<%= index %>];
    var ancestor_element = $('#statements div#<%= type %>_'+ancestor);
    /* if not rendered, than render */
    if(ancestor_element.length == 0) {
      renderAncestor(ancestor, "<%= escape_javascript(render_ancestor(ancestor)) %>");
    } else {
      collapseStatement(ancestor_element);
    }
  <% end %>
<% end %>

var class_element = $('#statements .statement:eq(<%= @statement_node ? @statement_node.level + 1 : 0%>)');

var add_teaser = "<%= escape_javascript(render :partial => 'statements/add') %>";
replaceOrInsert(class_element, add_teaser);

/* Remove all elements from the same class or children class */
removeChildrenStatements($('#statements div.<%= @type %>'));
