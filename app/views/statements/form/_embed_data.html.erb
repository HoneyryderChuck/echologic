
<% statement_node ||= @statement_node %>
<% no_data = statement_node.statement.statement_datas.empty? %>
<% info_type = statement_node.statement.info_type %>

<% content_tag :div, :class => "embed_data" do %>
  
  <% form.semantic_fields_for :statement, statement_node.statement do |stat| %>
	  <!-- Info Type Radio Buttons -->
	  <% content_tag :ol, :class => 'data_block entry_type' do %>
	    <% content_tag :li do %>
	      <%= content_tag :span, I18n.t('activerecord.attributes.statement.info_type_id'), :class => 'label' %>
	      <% content_tag :div, :class => 'entry_types' do %>
	        <% content_tag :fieldset do %>
	          <% content_tag :ol do %>
	            <%= stat.input :info_code, :as =>:hidden, :value => info_type.nil? ? '' : info_type.code, :input_html => {:class => "info_type_input"}  %>
	            <% InfoType.all.each do |info_type| %>
	              <% content_tag :li, :class => "info_type #{info_type.code}", :'data-value' => info_type.code do %>
	                <noscript>
	                  <%= radio_button_tag "#{dom_class(statement_node)}[statement_attributes][info_code]",
	                                       info_type.code,
	                                       (!no_data and statement_node.info_type.eql?(info_type)),
	                                       :class => "info_type #{info_type.code}" %>
	                </noscript>
	                <%= content_tag :span, '', :class => 'icon' %>
	                <%= label_tag info_type.value %>
	              <% end %>
	            <% end %>
	          <% end %>
	        <% end %>
	      <% end %>
	    <% end %>
	  <% end %>
	
	  <!-- External URL -->
		<% stat.semantic_fields_for :external_url, statement_node.statement.external_url || ExternalUrl.new do |external| %>
		  <% external.inputs :class => "entry_url_container" do %>
	      <%= external.input :info_url,
                           :input_html => {
	                           :class => "embed_url",
		                         'data-default' => I18n.t("discuss.statements.info_url_hint"),
		                         'invalid-message' => I18n.t("activerecord.errors.messages.invalid",
		                                                     :attribute => I18n.t("activerecord.attributes.statement_data.info_url"))} %>
																											 
	      <%= link_to I18n.t('discuss.statements.preview_embedded_content'), "#", :class => "preview_button text_button" %>
			<% end %>
		<% end %>
  <% end %>
<% end %>