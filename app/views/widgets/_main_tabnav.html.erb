<%
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :main % > (just the tabnav)
# or, if you want a boxed tabnav:
#   <% tabnav :main do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'})
#
render_tabnav :main,
              :generate_css => false,
              :html => { :class => 'applicationTabs' } do

  add_tab do |t|
    t.named I18n.t('layouts.tabs.discuss')
    t.links_to hash_for_discuss_path
  end

  add_tab :html => { :id => 'connect_tab' } do |t|
    t.named I18n.t('layouts.tabs.connect')
    t.links_to hash_for_connect_path
    t.highlights_on :controller => 'connect'
  end

  add_tab :html => { :id => 'act_tab' } do |t|
    t.named I18n.t('layouts.tabs.act')
    t.links_to hash_for_act_path
  end

  add_tab :html => { :id => 'my_echo_tab' } do |t|
    t.named I18n.t('layouts.tabs.my_echo')
    t.links_to hash_for_welcome_path
    t.highlights_on :controller => 'users/profile'
    t.highlights_on :controller => 'my_echo'
  end

  add_tab :html => { :id => 'admin_tab' } do |t|
    t.named I18n.t('layouts.tabs.admin')
    t.links_to hash_for_admin_path
    t.highlights_on :controller => 'i18n/locales'
    t.highlights_on :controller => 'i18n/translations'
    t.highlights_on :controller => 'users/reports'
  end if show_admin_options?





  #add_tab do |t|
  #  t.named 'Home'
  #  t.titled 'Home Page'
  #  t.links_to :controller => 'welcome'
  #end
  #
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #
  # # A tab can be initialized with a Hash like this:
  #
  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
  #
  # # You can have a dynamic name or link
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside
  #
  # add_tab do |t|
  #   t.named image_tag('test')
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
end
%>
